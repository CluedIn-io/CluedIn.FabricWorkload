# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- develop

pool:
  vmImage: ubuntu-latest

variables:
- group: FabricService

stages:

  - stage: DEPLOY_STAGE_DEVELOP
    displayName: "Deploy Fabric Frontend - Dev"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/develop')
    variables:
      - name: environment
        value: "develop"
    jobs:
      - template: ./templates/deploy-infrastructure.yml
        parameters:
          environment: $(environment)
          deploymentEnvironment: fabric-dev
          terraformStorage: $(service.Terraform.Storage)
          terraformContainer: $(service.Terraform.Container)
          terraformAccessKey: $(service.Terraform.AccessKey)
          terraformDir: $(System.DefaultWorkingDirectory)/release/terraform
          terraformOutputPath: $(Pipeline.Workspace)/terraform/$(environment)
          terraformPlanPath: $(Pipeline.Workspace)/terraform/$(environment)/tfplan
          subscriptionId: $(service.Azure.SubscriptionId)
          clientId: $(service.Azure.ClientId)
          clientSecret: $(service.Azure.ClientSecret)
          tenantId: $(service.Azure.TenantId)
          location: $(service.Develop.Location)
          resourceGroupName: $(service.Develop.ResourceGroupName)