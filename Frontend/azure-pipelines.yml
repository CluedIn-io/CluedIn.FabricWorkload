# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- test

pool:
  vmImage: ubuntu-latest

variables:
- group: FabricService

resources:
  repositories:
    - repository: templates
      type: github
      name: CluedIn-io/AzurePipelines.Templates
      endpoint: 'CluedIn-io'
      ref: refs/heads/refactor

stages:
  - stage: DEPLOY_STAGE_DEVELOP
    displayName: "Deploy Fabric Frontend - Dev"
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'test'))
    variables:
      - name: environment
        value: "test"
    jobs:
      - template: ./templates/deploy-infrastructure.yml
        parameters:
          environment: $(environment)
          deploymentEnvironment: fabric-dev
          terraformStorage: $(service.Terraform.StorageAccount)
          terraformContainer: $(service.Terraform.Container)
          terraformAccessKey: $(service.Terraform.AccessKey)
          terraformDir: $(System.DefaultWorkingDirectory)/Frontend/terraform
          terraformOutputPath: $(Pipeline.Workspace)/Frontend/terraform/$(environment)
          terraformPlanPath: $(Pipeline.Workspace)/Frontend/terraform/$(environment)/tfplan
          subscriptionId: $(service.Azure.SubscriptionId)
          clientId: $(service.Azure.ClientId)
          clientSecret: $(service.Azure.ClientSecret)
          tenantId: $(service.Azure.TenantId)
          location: $(service.Develop.Location)
          resourceGroupName: $(service.Develop.ResourceGroupName)
  - stage: BUILD_FRONTEND
    displayName: "Build Static Frontend"
    jobs:
      - job: BUILD_AND_UPLOAD
        displayName: "Build & Deploy Static UI"
        steps:         
          - checkout: self
            fetchDepth: 0 

          - template: common/gitversion.yml@templates

          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
            displayName: "Install Node.js"

          - script: |
              cd Frontend
              npm install
            displayName: "Install dependencies"

          - script: |
              cd Frontend
              export NODE_OPTIONS="--max_old_space_size=4096"
              npm run build:prod
            displayName: "Build UI"

          - task: PowerShell@2
            displayName: 'Login to Azure with Service Principal'
            inputs:
              targetType: 'inline'
              pwsh: true
              script: |
                az login --service-principal `
                  --username $env:AZURE_CLIENT_ID `
                  --password $env:AZURE_CLIENT_SECRET `
                  --tenant $env:AZURE_TENANT_ID
            env:
              AZURE_CLIENT_ID: $(service.Azure.ClientId)
              AZURE_CLIENT_SECRET: $(service.Azure.ClientSecret)
              AZURE_TENANT_ID: $(service.Azure.TenantId)

          - task: PowerShell@2
            displayName: 'Enable Static Website Hosting'
            inputs:
              targetType: 'inline'
              pwsh: true
              script: |
                az storage blob service-properties update `
                  --account-name stcluedinfabricweudev `
                  --static-website `
                  --index-document index.html `
                  --404-document index.html `
                  --auth-mode login

          - task: PowerShell@2
            displayName: 'Upload UI to Static Site'
            inputs:
              targetType: 'inline'
              pwsh: true
              script: |
                Write-Host "üîé Detecting Webpack output path..."
                $rawOutput = & node -e "const config = require('./Frontend/tools/webpack.config.js'); console.log(config.output.path)"
                $outputPath = $rawOutput -split "`n" | Select-Object -Last 1
                $outputPath = $outputPath.Trim()
                Write-Host "‚úÖ Detected Webpack output path: $outputPath"
                
                if (-Not (Test-Path $outputPath)) {
                  Write-Error "‚ùå ERROR: Webpack output folder '$outputPath' not found!"
                  exit 1
                  }
                az storage blob upload-batch `
                  --account-name stcluedinfabricweudev `
                  --destination '$web' `
                  --source $outputPath `
                  --auth-mode login